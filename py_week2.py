# -*- coding: utf-8 -*-
"""Py.Week2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12VAQieUly5ytuKuPbh-zza4jlcZ3FG8N
"""

# WEEK2 PYTHON CUNY BRIDGE 07/23/2022 
# Do not use built in programs to do the following.
# Write the programs to demonstrate that you understand the math behind them.  
# Provide all solutions in an .html file.

# 1.  Write a Python program to compute the eigenvalues and right eigenvectors of a given square array.
# Sources: https://www.mathsisfun.com/algebra/eigenvalue.html
# Sources: https://numpy.org/doc/stable/reference/generated/numpy.linalg.eig.html
# Using/coding with Numpy makes much more easier to work on. Learning the concept of "eigenvalues and eigenvectors" is another learning curve for me.

import numpy
a = numpy.array ([[3, 1],[2, 2]])
print ("Initial Array: ",)
print ( a)

w,v = numpy.linalg.eig (a)
print ("Eigenvalues is:", w)
print ("Eigenvectors is:")
print (v)

# 2.  Write a Python program to compute the factor of a given array by Singular Value Decomposition
# Sources: https://machinelearningmastery.com/singular-value-decomposition-for-machine-learning/
# Sources: https://gregorygundersen.com/blog/2018/12/10/svd/
# Sources: https://numpy.org/doc/stable/reference/generated/numpy.linalg.svd.html

# A = UÎ£V^t or A = UDV^t or A = USV^h (where A has 'm' rows & 'n' columns )
# vectors u: orthogonal m * m matrix: its columns are left singular vectors
# vectors v: orthogonal n * n matrix: its columns are right singular vectors
# values  d: diagonal   m * n matrix: elements along its diagonal are singular values

import numpy
a = numpy.array ([[0,0,0,1,1],[2,0,0,1,2],[4,1,0,2,0],[3,1,0,2,0]], dtype = numpy.float32)
print ("Initial Array:")
print (a)

U, s, V = numpy.linalg.svd (a, full_matrices= False)
print("U: 2D arrays of m * m square matrix: ", U , "\n")
print("s: 1D array of singular values: ", s, "\n")
print("V: 2D arrays of n * n square matrix:", V)

# 3.  Write a Python program to compute the determinant of an array.
# Sources: https://numpy.org/doc/stable/reference/generated/numpy.linalg.det.html
# Sources: https://www.mathsisfun.com/algebra/matrix-determinant.html
# Sources: https://www.youtube.com/watch?v=Ip3X9LOh2dk

# det([[a,c],[b,d]]) = ad - bc   (for 2D matrix)

import numpy
a = numpy.array ([[3, 2],[1, 5]])
print ("Initial Array:")
print (a)

print ("Determinant:")
print (numpy.linalg.det(a))